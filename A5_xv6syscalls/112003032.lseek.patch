diff --git a/Makefile b/Makefile
index 09d790c..c84e79b 100644
--- a/Makefile
+++ b/Makefile
@@ -181,6 +181,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_testlseek\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff --git a/syscall.c b/syscall.c
index ee85261..bb96e30 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,6 +103,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_lseek(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +127,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_lseek]   sys_lseek,
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..93fbf00 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_lseek  22
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..0c7f0a8 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -442,3 +442,26 @@ sys_pipe(void)
   fd[1] = fd1;
   return 0;
 }
+
+#define SEEK_SET 0
+#define SEEK_CUR 1
+
+int
+sys_lseek(void)
+{
+    struct file *f;
+    int fildes, offset, whence;
+    /* get arguments in order from stack */
+    if ((argfd(0, &fildes, &f) == -1) || (argint(1, &offset) == -1) || (argint(2, &whence) == -1)) {
+        return -1;
+    }
+    /* move file offset to required position */
+    if (whence == SEEK_SET) {
+        f->off = offset;
+    } else if (whence == SEEK_CUR) {
+        f->off += offset;
+    } else {
+        return -1;
+    }
+    return 0;
+}
diff --git a/testlseek.c b/testlseek.c
new file mode 100644
index 0000000..d6744ef
--- /dev/null
+++ b/testlseek.c
@@ -0,0 +1,31 @@
+#include "types.h"
+#include "user.h"
+#include "stat.h"
+#include "fs.h"
+
+#define SEEK_SET 0
+#define SEEK_CUR 1
+
+int main(int argc, char *argv[])
+{
+    int fd;
+    fd = open("README", 0);
+    char buf[128];
+    printf(1, "Before lseek:\n");
+    read(fd, buf, 30);
+    write(1, buf, 30);
+    printf(1, "\nReading 10 bytes after lseek(SEEK_SET) 0 bytes:\n");
+    if (lseek(fd, 0, SEEK_SET) == -1) {
+        exit();
+    }
+    read(fd, buf, 10);
+    write(1, buf, 10);
+    printf(1, "\nReading 10 bytes after lseek(SEEK_CUR) 5 bytes:\n");
+    if (lseek(fd, 5, SEEK_CUR) == -1) {
+        exit();
+    }
+    read(fd, buf, 10);
+    write(1, buf, 10);
+    printf(1, "\nDone\n");
+    exit();
+}
diff --git a/user.h b/user.h
index 4f99c52..70470c0 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int lseek(void);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..6244300 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(lseek)
